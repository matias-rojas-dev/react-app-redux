{"version":3,"sources":["components/Book.js","constants/index.js","components/PredefinedBook.js","components/PredefinedList.js","components/Predefined.js"],"names":["Book","props","data","favoriteBooks","id","volumeInfo","title","imageLinks","useState","favorite","setFavorite","useEffect","filter","length","className","src","undefined","thumbnail","substr","type","onClick","deleteFavorite","handleDeleteFavorite","displayName","mapDispatchToProps","connect","state","base_url","api_key","booksSearch","query","booksSearchPredefined","searchGif","PredefinedBook","book","doneFetch","setDoneFetch","result","setResult","axios","get","then","items","getPredefinedData","map","PredefinedList","Predefined"],"mappings":"mKAKMA,EAAO,SAACC,GAAW,IAEdC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,cACNC,EAAMF,EAANE,GAHa,EAISF,EAAKG,WAA3BC,EAJa,EAIbA,MAAOC,EAJM,EAINA,WAJM,EAKYC,oBAAS,GALrB,mBAKbC,EALa,KAKHC,EALG,KA6BpB,OAJAC,qBAAU,WAPSR,EAAcS,QACzB,SAACT,GAAD,OAAmBA,EAAcD,KAAKE,KAAOA,KAGvCS,QAAQH,GAAY,MAQ9B,8BACI,sBAAKI,UAAWL,EAAW,4BAA8B,aAAzD,UACI,qBAAKM,SAAoBC,IAAfT,EAA2B,GAA3B,UAAmCA,EAAWU,aACxD,4BAAIX,EAAMO,OAAS,GAAKP,EAAMY,OAAO,EAAG,IAAM,MAAQZ,IAElDG,EACI,wBAAQK,UAAU,4BAA4BK,KAAK,SAASC,QAAS,kBA7B5D,SAAChB,GAC1BH,EAAMoB,eAAejB,GACrBM,GAAY,GA2B+EY,CAAqBlB,IAAhG,sBACF,wBAAQU,UAAU,eAAeK,KAAK,SAASC,QAzBvC,WACtBnB,EAAMS,YAAY,CAAER,SACpBQ,GAAY,IAuBE,4BAatBV,EAAKuB,YAAc,OAEnB,IAMMC,EAAqB,CACvBd,gBACAW,oBAGWI,iBAXS,SAACC,GACrB,MAAO,CACHvB,cAAeuB,EAAMvB,iBASWqB,EAAzBC,CAA6CzB,I,gCCpE5D,0GAAM2B,EAAW,iDACXC,EAAU,+CAEHC,EAAc,SAAAC,GAAK,gBAAOH,GAAP,OAAkBG,GAAlB,OAA0BF,EAA1B,mBACnBG,EAAwB,SAAAD,GAAK,gBAAOH,GAAP,OAAkBG,GAAlB,OAA0BF,EAA1B,kBAC7BI,EAAY,6E,kGCEnBC,EAAiB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EAEG1B,oBAAS,GAFZ,mBAExB2B,EAFwB,KAEbC,EAFa,OAGH5B,qBAHG,mBAGxB6B,EAHwB,KAGhBC,EAHgB,KAmB/B,OALA3B,qBAAU,YATgB,WACtB,IAAMmB,EAAQI,EACdK,IAAMC,IAAIT,YAAsBD,IAC3BW,MAAK,SAAAvC,GACFoC,EAAUpC,EAAKA,KAAKwC,OACpBN,GAAa,MAKrBO,KACD,IAIC,gCACI,oBAAI7B,UAAU,oBAAd,SAAmCoB,IACnC,qBAAKpB,UAAU,sBAAf,SAESqB,EAEKE,EAAOO,KAAI,SAAAV,GAAI,OACb,cAAClC,EAAA,EAAD,CAAiBE,KAAMgC,GAAZA,MAFf,+CAgBxBD,EAAeV,YAAc,iBAEdU,QCvBAY,EAxBQ,WAUnB,OACI,gCACI,oBAAI/B,UAAU,qBAAd,6BACA,qBAAKA,UAAU,+BAAf,SAZO,CACX,SACA,iBACA,YACA,mBACA,WACA,aACA,cAOmB8B,KAAI,SAAAV,GAAI,OACX,cAAC,EAAD,CAAgBA,KAAMA,aCZ/BY,UAJI,kBACf,cAAC,EAAD","file":"static/js/6.40d6b8d8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setFavorite, deleteFavorite} from '../redux/actions';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Book = (props) => {\r\n    \r\n    const {data, favoriteBooks} = props;\r\n    const {id} = data;\r\n    const {title, imageLinks } = data.volumeInfo;\r\n    const [favorite, setFavorite] = useState(false);\r\n\r\n    const handleDeleteFavorite = (id) => {\r\n        props.deleteFavorite(id);\r\n        setFavorite(false)\r\n    };\r\n\r\n    const handleSetFavorite = () => {\r\n        props.setFavorite({ data });\r\n        setFavorite(true)\r\n    };\r\n\r\n    const isFavorite = () => {\r\n        const result = favoriteBooks.filter(\r\n            (favoriteBooks) => favoriteBooks.data.id === id\r\n        );\r\n\r\n        if(result.length) setFavorite(true); \r\n    };\r\n\r\n    useEffect(() => {\r\n        isFavorite()\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            <div className={favorite ? 'book__card borderFavorite' : 'book__card'}>\r\n                <img src={imageLinks === undefined ? '' : `${imageLinks.thumbnail}`} />\r\n                <p>{title.length > 15 ? title.substr(0, 15) + '...' : title}</p>\r\n                {\r\n                    favorite ? \r\n                        <button className='book__button btn-favorite' type='submit' onClick={() => handleDeleteFavorite(id)}>FAVORITE</button>\r\n                    : <button className='book__button' type='submit' onClick={handleSetFavorite}>FAVORITE</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nBook.propTypes = {\r\n    favorite: propTypes.bool,\r\n    imageLinks: propTypes.object,\r\n    title: propTypes.string,\r\n};\r\n\r\nBook.displayName = 'Book';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favoriteBooks: state.favoriteBooks,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setFavorite,\r\n    deleteFavorite\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","const base_url = 'https://www.googleapis.com/books/v1/volumes?q=';\r\nconst api_key = '&key=AIzaSyDXrl1PB2RFqlCofGfp2kPur3zV88E-8gY';\r\n\r\nexport const booksSearch = query => `${base_url}${query}${api_key}&maxResults=15`;\r\nexport const booksSearchPredefined = query => `${base_url}${query}${api_key}&maxResults=9`;\r\nexport const searchGif = 'https://media.tenor.com/images/e791327361a8ed1c377aacfce9f52251/tenor.gif';\r\n\r\n","import React from 'react';\r\nimport { booksSearchPredefined } from \"../constants\";\r\nimport axios from 'axios';\r\nimport Book from \"./Book\";\r\nimport { useEffect, useState } from \"react\";\r\nimport propTypes from 'prop-types';\r\n\r\nconst PredefinedBook = ({book}) => {\r\n    \r\n    const [doneFetch, setDoneFetch] = useState(false);\r\n    const [result, setResult] = useState();\r\n\r\n    const getPredefinedData = () => {\r\n        const query = book;\r\n        axios.get(booksSearchPredefined(query))\r\n            .then(data => {\r\n                setResult(data.data.items);\r\n                setDoneFetch(true);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPredefinedData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='predefined__title'>{book}</h3>\r\n            <div className='predefined__section'>\r\n                {\r\n                    !doneFetch ?\r\n                        <h3>Loading</h3>\r\n                        : result.map(book => (\r\n                            <Book key={book} data={book} />\r\n                        ))\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPredefinedBook.propTypes = {\r\n    doneFetch: propTypes.bool,\r\n    result: propTypes.array,\r\n}\r\n\r\nPredefinedBook.displayName = 'PredefinedBook';\r\n\r\nexport default PredefinedBook;","import React from 'react';\r\nimport PredefinedBook from './PredefinedBook';\r\n\r\nconst PredefinedList = () => {\r\n    const choose = [\r\n        'Naruto',\r\n        'Marvel Studios',\r\n        'DC Comics',\r\n        'Japanese Stories',\r\n        'React JS',\r\n        'Angular JS',\r\n        'Javascript',\r\n    ]\r\n    return (\r\n        <div>\r\n            <h2 className='favoriteList_title'>Predefined list</h2>\r\n            <div className='booklist__searched-container'>\r\n                {\r\n                    choose.map(book => (\r\n                        <PredefinedBook book={book} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PredefinedList;","import React from 'react';\r\nimport PredefinedList from './PredefinedList';\r\n\r\nconst Predefined = () => (\r\n    <PredefinedList />\r\n)\r\n\r\nexport default Predefined;"],"sourceRoot":""}