{"version":3,"sources":["components/Book.js","constants/index.js","custom-hooks/useForm.js","components/BookList.js","container/Searched.js"],"names":["Book","props","data","favoriteBooks","id","volumeInfo","title","imageLinks","useState","favorite","setFavorite","useEffect","filter","length","className","src","undefined","thumbnail","substr","type","onClick","deleteFavorite","handleDeleteFavorite","displayName","mapDispatchToProps","connect","state","base_url","api_key","booksSearch","query","booksSearchPredefined","searchGif","useForm","book","setBook","result","setResult","doneFetch","setDoneFetch","handleChange","e","preventDefault","target","value","handleSubmit","axios","get","then","items","BookList","onSubmit","autoComplete","placeholder","onChange","class","map","alt","Searched"],"mappings":"mKAKMA,EAAO,SAACC,GAAW,IAEdC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,cACNC,EAAMF,EAANE,GAHa,EAISF,EAAKG,WAA3BC,EAJa,EAIbA,MAAOC,EAJM,EAINA,WAJM,EAKYC,oBAAS,GALrB,mBAKbC,EALa,KAKHC,EALG,KA6BpB,OAJAC,qBAAU,WAPSR,EAAcS,QACzB,SAACT,GAAD,OAAmBA,EAAcD,KAAKE,KAAOA,KAGvCS,QAAQH,GAAY,MAQ9B,8BACI,sBAAKI,UAAWL,EAAW,4BAA8B,aAAzD,UACI,qBAAKM,SAAoBC,IAAfT,EAA2B,GAA3B,UAAmCA,EAAWU,aACxD,4BAAIX,EAAMO,OAAS,GAAKP,EAAMY,OAAO,EAAG,IAAM,MAAQZ,IAElDG,EACI,wBAAQK,UAAU,4BAA4BK,KAAK,SAASC,QAAS,kBA7B5D,SAAChB,GAC1BH,EAAMoB,eAAejB,GACrBM,GAAY,GA2B+EY,CAAqBlB,IAAhG,sBACF,wBAAQU,UAAU,eAAeK,KAAK,SAASC,QAzBvC,WACtBnB,EAAMS,YAAY,CAAER,SACpBQ,GAAY,IAuBE,4BAatBV,EAAKuB,YAAc,OAEnB,IAMMC,EAAqB,CACvBd,gBACAW,oBAGWI,iBAXS,SAACC,GACrB,MAAO,CACHvB,cAAeuB,EAAMvB,iBASWqB,EAAzBC,CAA6CzB,I,gCCpE5D,0GAAM2B,EAAW,iDACXC,EAAU,+CAEHC,EAAc,SAAAC,GAAK,gBAAOH,GAAP,OAAkBG,GAAlB,OAA0BF,EAA1B,mBACnBG,EAAwB,SAAAD,GAAK,gBAAOH,GAAP,OAAkBG,GAAlB,OAA0BF,EAA1B,kBAC7BI,EAAY,6E,2FC4BVC,EA7BC,WAAO,IAAD,EAEMzB,mBAAS,IAFf,mBAEX0B,EAFW,KAELC,EAFK,OAGU3B,mBAAS,IAHnB,mBAGX4B,EAHW,KAGHC,EAHG,OAIgB7B,oBAAS,GAJzB,mBAIX8B,EAJW,KAIAC,EAJA,KAyBlB,MAAO,CAACC,aAlBa,SAACC,GAClBA,EAAEC,iBACF,IAAMR,EAAOO,EAAEE,OAAOC,MACtBT,EAAQD,IAeUW,aAZD,SAACJ,GAClBA,EAAEC,iBACF,IAAMZ,EAAQI,EAEdY,IAAMC,IAAIlB,YAAYC,IACjBkB,MAAK,SAAA9C,GACFmC,EAAUnC,EAAKA,KAAK+C,OACpBV,GAAa,OAKWH,SAAQE,c,OCuBjCY,EA9CE,WAAO,IAAD,EAEqCjB,IAAjDO,EAFY,EAEZA,aAAcK,EAFF,EAEEA,aAAcT,EAFhB,EAEgBA,OAAQE,EAFxB,EAEwBA,UAE3C,OACI,sBAAKxB,UAAU,sBAAf,UACI,sBAAKA,UAAW,gBAAhB,UACI,oBAAIA,UAAU,iBAAd,+BAEA,uBAAMqC,SAAUN,EAAc/B,UAAU,iBAAxC,UACI,uBACIsC,aAAa,OACbtC,UAAU,iBACVK,KAAK,OACLkC,YAAY,gBACZC,SAAUd,IAGd,wBACIrB,KAAK,SACLL,UAAU,mBAFd,SAII,mBAAGyC,MAAM,0BAKrB,qBAAKzC,UAAU,+BAAf,SAGSwB,EAECF,EAAOoB,KAAI,SAAAtB,GAAI,OACb,cAAClC,EAAA,EAAD,CAAiBE,KAAMgC,GAAZA,MAFX,qBAAKpB,UAAU,gBAAgBC,IAAKiB,IAAWyB,IAAI,sBC3B5DC,UARE,WACb,OACI,8BACE,cAAC,EAAD","file":"static/js/7.25c24457.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setFavorite, deleteFavorite} from '../redux/actions';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Book = (props) => {\r\n    \r\n    const {data, favoriteBooks} = props;\r\n    const {id} = data;\r\n    const {title, imageLinks } = data.volumeInfo;\r\n    const [favorite, setFavorite] = useState(false);\r\n\r\n    const handleDeleteFavorite = (id) => {\r\n        props.deleteFavorite(id);\r\n        setFavorite(false)\r\n    };\r\n\r\n    const handleSetFavorite = () => {\r\n        props.setFavorite({ data });\r\n        setFavorite(true)\r\n    };\r\n\r\n    const isFavorite = () => {\r\n        const result = favoriteBooks.filter(\r\n            (favoriteBooks) => favoriteBooks.data.id === id\r\n        );\r\n\r\n        if(result.length) setFavorite(true); \r\n    };\r\n\r\n    useEffect(() => {\r\n        isFavorite()\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            <div className={favorite ? 'book__card borderFavorite' : 'book__card'}>\r\n                <img src={imageLinks === undefined ? '' : `${imageLinks.thumbnail}`} />\r\n                <p>{title.length > 15 ? title.substr(0, 15) + '...' : title}</p>\r\n                {\r\n                    favorite ? \r\n                        <button className='book__button btn-favorite' type='submit' onClick={() => handleDeleteFavorite(id)}>FAVORITE</button>\r\n                    : <button className='book__button' type='submit' onClick={handleSetFavorite}>FAVORITE</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nBook.propTypes = {\r\n    favorite: propTypes.bool,\r\n    imageLinks: propTypes.object,\r\n    title: propTypes.string,\r\n};\r\n\r\nBook.displayName = 'Book';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favoriteBooks: state.favoriteBooks,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setFavorite,\r\n    deleteFavorite\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","const base_url = 'https://www.googleapis.com/books/v1/volumes?q=';\r\nconst api_key = '&key=AIzaSyDXrl1PB2RFqlCofGfp2kPur3zV88E-8gY';\r\n\r\nexport const booksSearch = query => `${base_url}${query}${api_key}&maxResults=15`;\r\nexport const booksSearchPredefined = query => `${base_url}${query}${api_key}&maxResults=9`;\r\nexport const searchGif = 'https://media.tenor.com/images/e791327361a8ed1c377aacfce9f52251/tenor.gif';\r\n\r\n","import { useState } from 'react'\r\nimport { booksSearch } from '../constants';\r\nimport axios from 'axios';\r\n\r\nconst useForm = () => {\r\n\r\n    const [book, setBook] = useState('');\r\n    const [result, setResult] = useState([]);\r\n    const [doneFetch, setDoneFetch] = useState(false);\r\n\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        const book = e.target.value;\r\n        setBook(book)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const query = book;\r\n\r\n        axios.get(booksSearch(query))\r\n            .then(data => {\r\n                setResult(data.data.items);\r\n                setDoneFetch(true);\r\n            })\r\n    };\r\n\r\n\r\n    return {handleChange, handleSubmit, result, doneFetch}\r\n\r\n}\r\n\r\nexport default useForm;","import React from 'react';\r\nimport {searchGif} from '../constants/index'\r\nimport Book from './Book';\r\nimport useForm from '../custom-hooks/useForm';\r\nimport propTypes from 'prop-types';\r\n\r\nconst BookList = () => {\r\n\r\n    const {handleChange, handleSubmit, result, doneFetch} = useForm();\r\n\r\n    return (\r\n        <div className='booklist__container'>\r\n            <div className ='booklist__box'>\r\n                <h1 className='booklist_title'>Search some books</h1>\r\n\r\n                <form onSubmit={handleSubmit} className='booklist__form' >\r\n                    <input\r\n                        autoComplete='none'\r\n                        className='booklist_input'\r\n                        type='text'\r\n                        placeholder='Search a book'\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <button\r\n                        type='submit'\r\n                        className='booklist__button'\r\n                    >\r\n                        <i class=\"fas fa-search\" />\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className='booklist__searched-container'>\r\n\r\n                {\r\n                    !doneFetch ?\r\n                        <img className='booklist__gif' src={searchGif} alt='Not results' /> \r\n                    : result.map(book => (\r\n                        <Book key={book} data={book} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nBookList.propTypes = {\r\n    doneFetch: propTypes.bool,\r\n    result: propTypes.array\r\n}\r\n\r\nexport default BookList;","import React from 'react'\r\nimport BookList from '../components/BookList';\r\nconst Searched = () => {\r\n    return (\r\n        <div>\r\n          <BookList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searched;"],"sourceRoot":""}