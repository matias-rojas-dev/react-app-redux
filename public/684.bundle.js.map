{"version":3,"sources":["webpack://react-app-redux/./src/components/Book.js","webpack://react-app-redux/./src/components/PredefinedBook.js","webpack://react-app-redux/./src/components/PredefinedList.js","webpack://react-app-redux/./src/components/Predefined.js","webpack://react-app-redux/./src/constants/index.js"],"names":["Book","props","data","favoriteBooks","id","volumeInfo","title","imageLinks","useState","favorite","setFavorite","useEffect","filter","length","className","src","undefined","thumbnail","substr","type","onClick","deleteFavorite","handleDeleteFavorite","propTypes","displayName","mapDispatchToProps","connect","state","PredefinedBook","book","doneFetch","setDoneFetch","result","setResult","query","axios","booksSearchPredefined","then","items","map","key","base_url","api_key","booksSearch","searchGif"],"mappings":"sRAKA,IAAMA,EAAO,SAACC,GAAU,I,IAEbC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,cACNC,EAAMF,EAANE,GAHa,EAISF,EAAKG,WAA3BC,EAJa,EAIbA,MAAOC,EAJM,EAINA,WAJM,G,GAKYC,eAAS,G,EALrB,E,kzBAKbC,EALa,KAKHC,EALG,KA6BpB,OAJAC,gBAAU,WAPSR,EAAcS,QACzB,SAACT,GAAD,OAAmBA,EAAcD,KAAKE,KAAOA,KAGvCS,QAAQH,GAAY,MAQ9B,2BACI,uBAAKI,UAAWL,EAAW,4BAA8B,cACrD,uBAAKM,SAAoBC,IAAfT,EAA2B,GAA3B,UAAmCA,EAAWU,aACxD,yBAAIX,EAAMO,OAAS,GAAKP,EAAMY,OAAO,EAAG,IAAM,MAAQZ,GAElDG,EACI,0BAAQK,UAAU,4BAA4BK,KAAK,SAASC,QAAS,kBA7B5D,SAAChB,GAC1BH,EAAMoB,eAAejB,GACrBM,GAAY,GA2B+EY,CAAqBlB,KAAhG,YACF,0BAAQU,UAAU,eAAeK,KAAK,SAASC,QAzBvC,WACtBnB,EAAMS,YAAY,CAAER,SACpBQ,GAAY,KAuBE,eAOtBV,EAAKuB,UAAY,CACbd,SAAUc,SACVhB,WAAYgB,WACZjB,MAAOiB,YAGXvB,EAAKwB,YAAc,OAEnB,IAMMC,EAAqB,CACvBf,iBACAW,qBAGJ,KAAeK,SAXS,SAACC,GACrB,MAAO,CACHxB,cAAewB,EAAMxB,iBASWsB,EAAxC,CAA4DzB,I,ykCC9D5D,IAAM4B,EAAiB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KAAU,KAEGrB,eAAS,GAFZ,GAExBsB,EAFwB,KAEbC,EAFa,UAGHvB,gBAHG,GAGxBwB,EAHwB,KAGhBC,EAHgB,KAmB/B,OALAtB,gBAAU,WATgB,IAChBuB,IAAQL,EACdM,SAAUC,QAAsBF,IAC3BG,MAAK,SAAAnC,GACF+B,EAAU/B,EAAKA,KAAKoC,OACpBP,GAAa,QAMtB,IAIC,+BACI,0BAAIjB,UAAU,qBAAqBe,GACnC,2BAAKf,UAAU,uBAENgB,EAEKE,EAAOO,KAAI,SAAAV,GAAI,OACb,oBAAC7B,EAAA,EAAD,CAAMwC,IAAKX,EAAM3B,KAAM2B,OAF3B,4CAWxBD,EAAeL,UAAY,CACvBO,UAAWP,SACXS,OAAQT,WAGZK,EAAeJ,YAAc,iBAE7B,QC3BA,EAnBuB,WAEnB,OACI,2BACI,sBAAIV,UAAU,sBAAd,mBACA,uBAAKA,UAAU,gCACX,gBAAC,EAAD,CAAgBe,KAAM,WACtB,gBAAC,EAAD,CAAgBA,KAAM,mBACtB,gBAAC,EAAD,CAAgBA,KAAM,cACtB,gBAAC,EAAD,CAAgBA,KAAM,qBACtB,gBAAC,EAAD,CAAgBA,KAAM,aACtB,gBAAC,EAAD,CAAgBA,KAAM,eACtB,gBAAC,EAAD,CAAgBA,KAAM,kBCRtC,EAJmB,kBACf,gBAAC,EAAD,Q,mHCJJ,IAAMY,EAAW,iDACXC,EAAU,+CAEHC,EAAc,SAAAT,GAAK,gBAAOO,GAAP,OAAkBP,GAAlB,OAA0BQ,EAA1B,mBACnBN,EAAwB,SAAAF,GAAK,gBAAOO,GAAP,OAAkBP,GAAlB,OAA0BQ,EAA1B,kBAC7BE,EAAY","file":"684.bundle.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setFavorite, deleteFavorite} from '../redux/actions';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Book = (props) => {\r\n    \r\n    const {data, favoriteBooks} = props;\r\n    const {id} = data;\r\n    const {title, imageLinks } = data.volumeInfo;\r\n    const [favorite, setFavorite] = useState(false);\r\n\r\n    const handleDeleteFavorite = (id) => {\r\n        props.deleteFavorite(id);\r\n        setFavorite(false)\r\n    };\r\n\r\n    const handleSetFavorite = () => {\r\n        props.setFavorite({ data });\r\n        setFavorite(true)\r\n    };\r\n\r\n    const isFavorite = () => {\r\n        const result = favoriteBooks.filter(\r\n            (favoriteBooks) => favoriteBooks.data.id === id\r\n        );\r\n\r\n        if(result.length) setFavorite(true); \r\n    };\r\n\r\n    useEffect(() => {\r\n        isFavorite()\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            <div className={favorite ? 'book__card borderFavorite' : 'book__card'}>\r\n                <img src={imageLinks === undefined ? '' : `${imageLinks.thumbnail}`} />\r\n                <p>{title.length > 15 ? title.substr(0, 15) + '...' : title}</p>\r\n                {\r\n                    favorite ? \r\n                        <button className='book__button btn-favorite' type='submit' onClick={() => handleDeleteFavorite(id)}>FAVORITE</button>\r\n                    : <button className='book__button' type='submit' onClick={handleSetFavorite}>FAVORITE</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nBook.propTypes = {\r\n    favorite: propTypes.bool,\r\n    imageLinks: propTypes.object,\r\n    title: propTypes.string,\r\n};\r\n\r\nBook.displayName = 'Book';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favoriteBooks: state.favoriteBooks,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setFavorite,\r\n    deleteFavorite\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","import { booksSearchPredefined } from \"../constants\";\r\nimport axios from 'axios';\r\nimport Book from \"./Book\";\r\nimport { useEffect, useState } from \"react\";\r\nimport propTypes from 'prop-types';\r\n\r\nconst PredefinedBook = ({book}) => {\r\n    \r\n    const [doneFetch, setDoneFetch] = useState(false);\r\n    const [result, setResult] = useState();\r\n\r\n    const getPredefinedData = () => {\r\n        const query = book;\r\n        axios.get(booksSearchPredefined(query))\r\n            .then(data => {\r\n                setResult(data.data.items);\r\n                setDoneFetch(true);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPredefinedData();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='predefined__title'>{book}</h3>\r\n            <div className='predefined__section'>\r\n                {\r\n                    !doneFetch ?\r\n                        <h3>Loading</h3>\r\n                        : result.map(book => (\r\n                            <Book key={book} data={book} />\r\n                        ))\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPredefinedBook.propTypes = {\r\n    doneFetch: propTypes.bool,\r\n    result: propTypes.array,\r\n}\r\n\r\nPredefinedBook.displayName = 'PredefinedBook';\r\n\r\nexport default PredefinedBook;","import React from 'react';\r\nimport PredefinedBook from './PredefinedBook';\r\n\r\nconst PredefinedList = () => {\r\n    \r\n    return (\r\n        <div>\r\n            <h2 className='favoriteList_title'>Predefined list</h2>\r\n            <div className='booklist__searched-container'>\r\n                <PredefinedBook book={'Naruto'} />\r\n                <PredefinedBook book={'Marvel Studios'} />\r\n                <PredefinedBook book={'DC Comics'} />\r\n                <PredefinedBook book={'Japanese Stories'} />\r\n                <PredefinedBook book={'React JS'} />\r\n                <PredefinedBook book={'Angular JS'} />\r\n                <PredefinedBook book={'Javascript'} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PredefinedList;","import React from 'react';\r\nimport PredefinedList from './PredefinedList';\r\n\r\nconst Predefined = () => (\r\n    <PredefinedList />\r\n)\r\n\r\nexport default Predefined;","const base_url = 'https://www.googleapis.com/books/v1/volumes?q=';\r\nconst api_key = '&key=AIzaSyDXrl1PB2RFqlCofGfp2kPur3zV88E-8gY';\r\n\r\nexport const booksSearch = query => `${base_url}${query}${api_key}&maxResults=15`;\r\nexport const booksSearchPredefined = query => `${base_url}${query}${api_key}&maxResults=9`;\r\nexport const searchGif = 'https://media.tenor.com/images/e791327361a8ed1c377aacfce9f52251/tenor.gif';\r\n\r\n"],"sourceRoot":""}