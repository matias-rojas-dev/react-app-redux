{"version":3,"sources":["webpack://react-app-redux/./src/components/Book.js","webpack://react-app-redux/./src/components/FavoritesList.js","webpack://react-app-redux/./src/container/Favorites.js"],"names":["Book","props","data","favoriteBooks","id","volumeInfo","title","imageLinks","useState","favorite","setFavorite","useEffect","filter","length","className","src","undefined","thumbnail","substr","type","onClick","deleteFavorite","handleDeleteFavorite","propTypes","displayName","mapDispatchToProps","connect","state","changeName","map","bookSearch","key","FavoritesList"],"mappings":"sRAKA,IAAMA,EAAO,SAACC,GAAU,I,IAEbC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,cACNC,EAAMF,EAANE,GAHa,EAISF,EAAKG,WAA3BC,EAJa,EAIbA,MAAOC,EAJM,EAINA,WAJM,G,GAKYC,eAAS,G,EALrB,E,kzBAKbC,EALa,KAKHC,EALG,KA6BpB,OAJAC,gBAAU,WAPSR,EAAcS,QACzB,SAACT,GAAD,OAAmBA,EAAcD,KAAKE,KAAOA,KAGvCS,QAAQH,GAAY,MAQ9B,2BACI,uBAAKI,UAAWL,EAAW,4BAA8B,cACrD,uBAAKM,SAAoBC,IAAfT,EAA2B,GAA3B,UAAmCA,EAAWU,aACxD,yBAAIX,EAAMO,OAAS,GAAKP,EAAMY,OAAO,EAAG,IAAM,MAAQZ,GAElDG,EACI,0BAAQK,UAAU,4BAA4BK,KAAK,SAASC,QAAS,kBA7B5D,SAAChB,GAC1BH,EAAMoB,eAAejB,GACrBM,GAAY,GA2B+EY,CAAqBlB,KAAhG,YACF,0BAAQU,UAAU,eAAeK,KAAK,SAASC,QAzBvC,WACtBnB,EAAMS,YAAY,CAAER,SACpBQ,GAAY,KAuBE,eAOtBV,EAAKuB,UAAY,CACbd,SAAUc,SACVhB,WAAYgB,WACZjB,MAAOiB,YAGXvB,EAAKwB,YAAc,OAEnB,IAMMC,EAAqB,CACvBf,iBACAW,qBAGJ,KAAeK,SAXS,SAACC,GACrB,MAAO,CACHxB,cAAewB,EAAMxB,iBASWsB,EAAxC,CAA4DzB,I,iHCnC5D,GAAe0B,SAPS,SAACC,GACrB,MAAO,CACHxB,cAAewB,EAAMxB,cACrByB,WAAYD,EAAMC,cAIc,KAAxC,EA7BqB,SAAC3B,GAAU,IAEpBE,EAA8BF,EAA9BE,cAAeyB,EAAe3B,EAAf2B,WAEvB,OACI,2BACI,sBAAId,UAAU,sBAAd,uBAAwDc,GACxD,uBAAKd,UAAU,gCAENX,EAAcU,OAETV,EAAc0B,KAAI,SAACC,GAAD,OAChB,2BACI,gBAAC9B,EAAA,EAAD,CAAM+B,IAAKD,EAAW1B,GAAIF,KAAM4B,EAAW5B,WAHnD,wCCPxB,EAJkB,kBAChB,gBAAC8B,EAAD","file":"486.bundle.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {setFavorite, deleteFavorite} from '../redux/actions';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Book = (props) => {\r\n    \r\n    const {data, favoriteBooks} = props;\r\n    const {id} = data;\r\n    const {title, imageLinks } = data.volumeInfo;\r\n    const [favorite, setFavorite] = useState(false);\r\n\r\n    const handleDeleteFavorite = (id) => {\r\n        props.deleteFavorite(id);\r\n        setFavorite(false)\r\n    };\r\n\r\n    const handleSetFavorite = () => {\r\n        props.setFavorite({ data });\r\n        setFavorite(true)\r\n    };\r\n\r\n    const isFavorite = () => {\r\n        const result = favoriteBooks.filter(\r\n            (favoriteBooks) => favoriteBooks.data.id === id\r\n        );\r\n\r\n        if(result.length) setFavorite(true); \r\n    };\r\n\r\n    useEffect(() => {\r\n        isFavorite()\r\n    });\r\n    \r\n    return (\r\n        <div>\r\n            <div className={favorite ? 'book__card borderFavorite' : 'book__card'}>\r\n                <img src={imageLinks === undefined ? '' : `${imageLinks.thumbnail}`} />\r\n                <p>{title.length > 15 ? title.substr(0, 15) + '...' : title}</p>\r\n                {\r\n                    favorite ? \r\n                        <button className='book__button btn-favorite' type='submit' onClick={() => handleDeleteFavorite(id)}>FAVORITE</button>\r\n                    : <button className='book__button' type='submit' onClick={handleSetFavorite}>FAVORITE</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nBook.propTypes = {\r\n    favorite: propTypes.bool,\r\n    imageLinks: propTypes.object,\r\n    title: propTypes.string,\r\n};\r\n\r\nBook.displayName = 'Book';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favoriteBooks: state.favoriteBooks,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setFavorite,\r\n    deleteFavorite\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Book from './Book';\r\n\r\nconst FavoriteList = (props) => {\r\n\r\n    const { favoriteBooks, changeName } = props;\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='favoriteList_title'>Your favorite books!{changeName}</h2>\r\n            <div className='booklist__searched-container'>\r\n                {\r\n                    !favoriteBooks.length ?\r\n                        <h3>Empty</h3>\r\n                        : favoriteBooks.map((bookSearch) => (\r\n                            <div>\r\n                                <Book key={bookSearch.id} data={bookSearch.data} />\r\n                            </div>\r\n                        ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        favoriteBooks: state.favoriteBooks,\r\n        changeName: state.changeName,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(FavoriteList);","import React from 'react';\r\nimport FavoritesList from '../components/FavoritesList';\r\n\r\nconst Favorites = () => (\r\n  <FavoritesList />\r\n)\r\n\r\nexport default Favorites;"],"sourceRoot":""}